# ===============================================================================
#
# This file is a simple configuration file for the Streams DPS toolkit.
# Any line starting with # is a comment line.
# You must correctly configure the following in this file.
# 
# 1) In the very first non-comment regular line of this file, please tell us
#    about the name of the key value store product you will be using.
#    It can ONLY be one of these NoSQL K/V data store product names supported by the DPS toolkit:
#
#    i)    memcached
#    ii)   redis 
#    iii)  cassandra
#    iv)   cloudant
#    v)    hbase
#    vi)   mongo
#    vii)  couchbase
#    viii) redis-cluster
#    ix)   redis-cluster-plus-plus
#
#    Note: A 'redis' configuration can be made to work with a non-cluster redis instance in
#          TLS or non-TLS mode.
#
#          A 'redis-cluster-plus-plus' configuration can be made to work with a redis cluster in 
#          TLS/SSL or non-TLS mode.
#
#          A 'redis-cluster' configuration can be made to work with a redis cluster only in 
#          non-TLS mode. The other two redis configurations above makes this one redundant.
#
#
# 2) Below the line containing the K/V data store product name, please list
#    your valid memcached or redis or cassandra or cloudant or 
#    hbase or mongo or couchbase or redis-cluster server names or IP addresses.
#    (Please read below about the expected format of this for your chosen NoSQL data store product.)
#
#    a) For memcached, you must list all the participating servers one per line (names or IP addresses).
#
#       (e-g:)
#       Machine1
#       Machine2
#       Machine3
#
#    b) For redis, (i.e. redis running in a non cluster mode) please specify one or more 
#       servers (name or IP address) one per line or if you are working on a single machine
#       and if you prefer to use the Unix domain socket instead of TCP, you can simply
#       specify unixsocket instead of a server name. For redis, if you decide to use the
#       unixsocket, you must also ensure that your redis.conf file on the server side is 
#       configured properly for a unix domain socket pointing to /tmp/redis.sock file and 
#       the usual redis port set to 0.
#
#    IMPORTANT TIP ABOUT RUNNING MULTIPLE REDIS SERVERS (in a non cluster redis configuration):   
#    (If you have a heavy workload of put/get requests, then using multiple Redis servers 
#     may give scaling to improve the overall throughput. If you are going to consider using
#     multiple Redis servers that are not configured in a redis-cluster mode, the dps toolkit
#     will automatically do the client side partitioning to shard (i.e. spread) your data across
#     those servers. You may also decide to run multiple Redis server instances on a single
#     machine to take advantage of the available CPU cores.
#     If you run multiple Redis servers on a single machine, then you must configure each server 
#     instance with a unique port in a separate redis.conf.X file where X is your Redis server
#     instance number. [For example, if you run 3 instances on the same machine, you can have
#     redis.conf.1, redis.conf.2, and redis.conf.3] If you are planning to run multiple Redis server
#     instances on the same machine, you may also want to assign unique PID file names in their
#     respective configuration files. Having done this, you can start each of those
#     redis server instances by running a command from the src directory of your redis installation
#     directory:  ./redis-server ../redis.conf.X  (substitute X with your redis server instance number).
#     When there are multiple Redis servers running on a single machine, then you must properly
#     specify below each ServerName:Port on a separate line. For Redis, one can optionally provide a
#     Redis authentication password after the port number if the Redis environment is configured to 
#     require authentication before using it. Along with that, one can optinally provide a
#     redis server connection timeout value and the use_tls field to indicate whether to
#     connect to the Redis server using TLS or not. Default Redis server connection timeout value is 
#     3 seconds and user can override it with any non-zero value in seconds.
#     For the use_tls field, a value of 1 means that TLS is needed and an absence of that field or 
#     a value of 0 for that field means that TLS is not needed. TLS makes sense only when a 
#     public cloud service based single redis server is configured i.e. IBM Compose Redis server or 
#     an AWS Elasticache Redis or Azure Cache for Redis or an on-prem Redis configured with a single server.
#     It is also necessary to have Redis server 6 or above to enable/disable the TLS/SSL feature.
#
#     RedisServerNameOrIPAddress:port:RedisPassword:ConnectionTimeoutValue:use_tls
#     (e-g:)
#     Machine1:7001:MyRedisPassword:7:1
#     Machine1:7002:::0
#     Machine1:7003:MyRedisPassword:6
#      
#    When there are multiple Redis servers configured, using the dpsXXXXTTL APIs will provide a
#    good scaling factor for your high volume put/get requests in comparison to using the APIs that
#    are based on the user created named stores. You are encouraged to choose between 
#    the TTL and non-TTL based APIs according to your functional and scaling needs. 
#
#    c) In Cassandra, all servers assume an equal role. There is no special primary or coordinator
#       server. For Cassandra, you can list either all or just only one of the 
#       seed servers (names or IP addresses as it is specified in your cassandra.yaml file).
#
#       (e-g:)
#       Machine1
#       Machine2
#       Machine3 
#
#    d) In Cloudant, you must have a personalized URL registered with the Cloudant public
#       web offering or with a "Cloudant Local" on-premises private installation.
#       Since you have to enter the user id and password below, it is better to create
#       a user id specifically for working with the Streams dps toolkit.
#
#       For the server name, you must enter a single line in the following format:
#       http://user:password@user.cloudant.com if you are using the Cloudant service on the web
#       (OR)
#       http://user:password@XXXXX where XXXXX is a name or IP address of your on-premises
#       Cloudant Local load balancer machine.
#
#    e) For HBase, you have to specify the HBase REST server address(es) in the format shown below.
#      User id and password in the URL below should match the Linux user id and password on
#      the machine where the HBase REST server program is running. If you have a multi-machine
#      HBase cluster, then you can run the HBase REST server on multiple machines and configure
#      one or more REST servers [one per line] below. Configuring multiple REST servers will 
#      let the DPS toolkit to spray (load balance) your heavy HBase workload to those multiple 
#      servers and that may be a factor in slightly improving the HBase read/write performance.
#      REST server address format: http://user:password@HBase-REST-ServerNameOrIPAddress:port
#
#      (e-g:)
#      http://user:password@Machine1:8080
#      http://user:password@Machine3:8080
#      http://user:password@Machine3:8080
#
#    f) For Mongo, you can specify a single server or a replica set (for redundancy and 
#       high availability using automatic fail-over) or a sharded cluster's query router
#       mongos seed servers (for HA, load balancing, high throughput and fail-over).
#       Please provide it in the following way for one of those three modes of MongoDB configuration.
#
#       (e-g for single server, replica set and sharded cluster in that order.)
#       Machine1:27017
#       Machine1:27017,Machine1:27018,Machine1:27019/?replicaSet=YOUR_MONGO_REPLICA_SET_NAME
#       Machine1:27069,Machine2:27069,Machine3:27069
#       [If you are using a sharded cluster, then you must manually enable sharding for the 
#        ibm_dps database and the collections created by the DPS in Mongo.]
#
#    g) For Couchbase, you can specify one or more server names. Please specify one server name per line.
#       You must have already created a Couchbase admin user id and password using the Couchbase 
#       web console. You must specify that admin user id and password as part of any one of the 
#       server names you will add below.
#
#       (e-g:)
#       user:password@Machine1
#       Machine2
#       Machine3 
#
#    h) For redis-cluster, you must install and configure Redis instances enabled with
#       the clustering option in the redis.conf file. This HA feature in the DPS toolkit 
#       is supported only in Redis version 3 and above. For error free application 
#       start-up as well as for proper reconnection to the auto reconfigured redis cluster 
#       on abrupt node outages, it is recommended that you specify more than one or even 
#       better all your redis-cluster primary and replica nodes (server name or IP address 
#       and a port number). Please note that this way of using the redis-cluster is done
#       via an older version of redis-cluster client wrapper built in year 2016. Hence, with
#       this configuration, you will not be able to use TLS/SSL in Redis server v6
#       and higher versions. It is good only for using a Redis cluster that is not
#       configured with TLS/SSL. If you prefer to work with a more recent version of
#       a redis-cluster client wrapper that is well tested with Redis server v6 and 
#       higher enabled for TLS/SSL or for non-TLS, it is recommended to skip to the next 
#       section and follow the steps from there.
#
#       RedisServerNameOrIPAddress:port:RedisPassword
#       (e-g:)
#       Machine1:7001:MyRedisPassword
#       Machine2:7001:MyRedisPassword
#       Machine3:7001:MyRedisPassword
#       Machine4:7001:MyRedisPassword
#
#    i) redis-cluster-plus-plus: The previous section works only for non-TLS redis-cluster configurations. 
#       This section explains how to use a TLS/SSL enabled redis-cluster that became available in 
#       Redis v6 or above. It uses a much newer C++ redis-cluster client wrapper called 
#       redis-plus-plus that allows us to work with a redis-cluster v6 or above enabled with TLS/SSL or 
#       non-TLS. For redis-cluster-plus-plus you must install and configure Redis instances enabled with 
#       the clustering option in the redis.conf file. This particular HA feature with non-TLS or TLS/SSL 
#       in the DPS toolkit is supported only in Redis version 6 or above. For error free application start-up 
#       as well as for proper reconnection to the auto reconfigured redis cluster on abrupt node outages, 
#       it is recommended that you specify more than one or even better all your redis-cluster primary and 
#       replica nodes (server name or IP address and a port number). Please refer to the commentary above 
#       for the non-clustered Redis to understand the connection timeout and TLS usage. Both are supported in
#       the clister-mode Redis as well when configuring your key value store product as redis-cluster-plus-plus.
#       If TLS for the Redis Cluster is enabled, three fully qualified file names for TLS certificate, TLS key and
#       TLS CA certificate must be specified in the order shown below.
#
#       RedisServerNameOrIPAddress:port:RedisClusterPassword:ConnectionTimeoutValue:use_tls:RedisClusterTlsCertificateFileName:RedisClusterTlsKeyileName:RedisClusterCACertificateFileName
#       (e-g:)
#       Machine1:7001:MyRedisPassword:7:1:/home/streamsadmin/my-redis.crt:/home/streamsadmin/my-redis.key:/home/streamsadmin/my-redis-ca.crt
#       Machine2:7001:MyRedisPassword:7:1:/home/streamsadmin/my-redis.crt:/home/streamsadmin/my-redis.key:/home/streamsadmin/my-redis-ca.crt
#       Machine3:7001:MyRedisPassword:7:1:/home/streamsadmin/my-redis.crt:/home/streamsadmin/my-redis.key:/home/streamsadmin/my-redis-ca.crt
#       Machine4:7001:MyRedisPassword:7:1:/home/streamsadmin/my-redis.crt:/home/streamsadmin/my-redis.key:/home/streamsadmin/my-redis-ca.crt
#
# ===============================================================================
redis
# Specify below your NoSQL K/V store servers' names or IP addresses, port numbers, passwords and other fields as applicable.
